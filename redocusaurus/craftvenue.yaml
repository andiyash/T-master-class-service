openapi: 3.0.3
info:
  description: >-
    Это спецификация API для управления мероприятиями, разработанная на основе
    OpenAPI 3.0. 

    Данный API позволяет взаимодействовать с системой бронирования, создания
    мероприятий и аренды объектов. 

    Вы можете использовать его для создания, редактирования и удаления
    мероприятий, а также для управления профилем пользователя и аренды.


    Полезные ссылки:

    - [Документация OpenAPI](https://swagger.io/specification/)

    - [Репозиторий проекта](https://github.com/example/repository)
  version: 1.0.0
  title: Event Management API
  termsOfService: http://example.com/terms/
  contact:
    email: support@example.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/events:
    get:
      tags:
        - Events
      summary: Получить список мероприятий
      responses:
        '200':
          description: Список мероприятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags:
        - Events
      summary: Создать новое мероприятие
      requestBody:
        description: Данные нового мероприятия
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Мероприятие успешно создано
  /api/events/{id}:
    get:
      tags:
        - Events
      summary: Получить информацию о мероприятии
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о мероприятии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    delete:
      tags:
        - Events
      summary: Удалить мероприятие
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Мероприятие успешно удалено
  /api/rentals:
    get:
      tags:
        - Rentals
      summary: Получить список аренды
      responses:
        '200':
          description: Список объектов аренды
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rental'
    post:
      tags:
        - Rentals
      summary: Добавить новый объект аренды
      requestBody:
        description: Данные объекта аренды
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rental'
      responses:
        '201':
          description: Объект аренды успешно добавлен
  /api/rentals/{id}:
    get:
      tags:
        - Rentals
      summary: Получить информацию об аренде
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация об аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
    put:
      tags:
        - Rentals
      summary: Забронировать аренду
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Данные для бронирования
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID пользователя
      responses:
        '200':
          description: Аренда успешно забронирована
  /api/account:
    get:
      tags:
        - Account
      summary: Получить информацию о текущем пользователе
      responses:
        '200':
          description: Информация о текущем пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Account
      summary: Обновить профиль пользователя
      requestBody:
        description: Данные для обновления профиля
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Профиль пользователя успешно обновлен
  /api/cards:
    get:
      tags:
        - Cards
      summary: Получить данные для главного экрана
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: filters
          in: query
          schema:
            type: object
      responses:
        '200':
          description: Данные для главного экрана
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /api/cards/{id}/book:
    post:
      tags:
        - Cards
      summary: Забронировать место на мероприятии
      description: >-
        Позволяет пользователю забронировать место на указанном мероприятии,
        если есть доступные места.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Идентификатор мероприятия
      requestBody:
        description: Информация о бронировании
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: Идентификатор пользователя
      responses:
        '200':
          description: Бронирование успешно выполнено
        '400':
          description: Нет доступных мест для бронирования
  /api/cards/{id}:
    get:
      tags:
        - Cards
      summary: Получить подробную информацию о мероприятии
      description: >-
        Возвращает полную информацию о выбранном мероприятии для отображения на
        отдельной странице.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Идентификатор мероприятия
      responses:
        '200':
          description: Подробная информация о мероприятии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetails'
components:
  schemas:
    EventDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        id:
          type: string
        details:
          $ref: '#/components/schemas/EventDetails'
    Rental:
      type: object
      properties:
        id:
          type: string
        item:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
